version: '3.8'
services:
    database:
        image: mysql
        environment:
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
            MYSQL_DATABASE: seguros
            MYSQL_USER: sistema
            MYSQL_PASSWORD_FILE: /run/secrets/db_password
        secrets:
            - db_root_password
            - db_password
        volumes:
            - ./database:/docker-entrypoint-initdb.d
        ports:
            - "3306:3306"
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
    gateway:
        build:
            context: ./security/gateway
        environment:
            SPRING_PROFILES_ACTIVE: docker
            TOKEN_SECRETKEY_FILE: /run/secrets/token_secretkey
        secrets:
            - token_secretkey
        ports:
            - "8080:8080"
    authentication:
        build:
            context: ./security/authentication
        environment:
            SPRING_PROFILES_ACTIVE: docker
            TOKEN_SECRETKEY_FILE: /run/secrets/token_secretkey
            DATASOURCE_PASSWORD_FILE: /run/secrets/db_password
        secrets:
            - token_secretkey
            - db_password
        ports:
            - "8081:8080"
        depends_on:
            database:
                condition: service_healthy
    backend:
        build:
            context: ./backend
        environment:
            SPRING_PROFILES_ACTIVE: docker
            DATASOURCE_PASSWORD_FILE: /run/secrets/db_password
        secrets:
            - db_password
        ports:
            - "8082:8080"
        depends_on:
            database:
                condition: service_healthy
        healthcheck:
            test: curl --fail http://localhost:8080/actuator/health || exit 1
            interval: 60s
            retries: 5
            start_period: 20s
            timeout: 10s
    frontend:
        build:
            context: ./frontend
            args:
                configuration: docker
        ports:
            - "80:80"
        depends_on:
            backend:
                condition: service_healthy

secrets:
    db_root_password:
        file: ./credenciales/db_root_password.txt
    db_password:
        file: ./credenciales/db_password.txt
    token_secretkey:
        file: ./credenciales/token_secretkey.txt
